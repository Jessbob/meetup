{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","expanded","onDetailsButtonClicked","setState","prevState","event","this","props","className","local_time","local_date","name","group","yes_rsvp_count","venue","address_1","city","localized_country_name","dangerouslySetInnerHTML","__html","description","visibility","href","link","onClick","Component","EventList","events","map","key","id","mockEvents","created","join_mode","lat","lon","urlname","who","localized_location","country","region","timezone","waitlist_count","duration","time","utc_offset","date_in_series_pattern","status","updated","member_pay_fee","rsvp_open_offset","getOrRenewAccessToken","type","a","async","url","axios","get","tokenInfo","localStorage","setItem","data","access_token","refresh_token","Date","now","getAccessToken","accessToken","getItem","searchParams","URLSearchParams","window","location","search","code","lastSavedTime","refreshToken","getSuggestions","query","startsWith","name_string","zip","token","result","getEvents","page","InfoAlert","color","getStyle","style","text","CitySearch","suggestions","handleInputChanged","value","target","then","length","infoText","handleItemClicked","updateEvents","placeholder","onChange","item","NumberOfEvents","number","onNumberChange","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","atatus","install"],"mappings":"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","file":"static/js/main.4d95dc50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    expanded: false\r\n  };\r\n\r\n  onDetailsButtonClicked = () => {\r\n    this.setState(prevState => ({\r\n      expanded: !prevState.expanded\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const event = this.props.event;\r\n    return (\r\n      <div className=\"Event\">\r\n        <p className=\"time\">\r\n          {event.local_time} - {event.local_date}\r\n        </p>\r\n        <p className=\"name\">{event.name}</p>\r\n        {event.group && event.group.name && (\r\n          <p className=\"group-name\">Group: {event.group.name}</p>\r\n        )}\r\n        <p className=\"going\">{event.yes_rsvp_count} people are going</p>\r\n\r\n        {this.state.expanded && (\r\n          <div className=\"extra\">\r\n            {event.venue && event.venue.name && (\r\n              <p className=\"address\">\r\n                {event.venue.name +\r\n                  \", \" +\r\n                  event.venue.address_1 +\r\n                  \", \" +\r\n                  event.venue.city +\r\n                  \", \" +\r\n                  event.venue.localized_country_name}\r\n              </p>\r\n            )}\r\n            <div\r\n              className=\"description\"\r\n              dangerouslySetInnerHTML={{ __html: event.description }}\r\n            />\r\n            <p className=\"visibility\">{event.visibility}</p>\r\n            <a className=\"link\" href={event.link}>\r\n              Event Link\r\n            </a>\r\n          </div>\r\n        )}\r\n        <button className=\"details-btn\" onClick={this.onDetailsButtonClicked}>\r\n          Details\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Event;\r\n","import React, { Component } from \"react\";\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {this.props.events.map(event => (\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","const mockEvents = {\r\n  city: {\r\n    id: 1007700,\r\n    city: \"München\",\r\n    lat: 48.14,\r\n    lon: 11.58,\r\n    state: \"\",\r\n    country: \"de\",\r\n    zip: \"meetup3\",\r\n    member_count: 1257\r\n  },\r\n  events: [\r\n    {\r\n      local_time: \"19:00\",\r\n      local_date: \"2020-01-29\",\r\n      link:\r\n        \"https://www.meetup.com/Immobilien-Investment-Meetup/events/267317388/\",\r\n      visibility: \"public_limited\",\r\n      group: {\r\n        created: 1514804691000,\r\n        name: \"Immobilien Investment Meetup\",\r\n        id: 27017440,\r\n        join_mode: \"approval\",\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: \"Immobilien-Investment-Meetup\",\r\n        who: \"Immopreneurs\",\r\n        localized_location: \"München, Germany\",\r\n        state: \"\",\r\n        country: \"de\",\r\n        region: \"en_US\",\r\n        timezone: \"Europe/Berlin\"\r\n      },\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 13,\r\n      duration: 7200000,\r\n      time: 1580320800000,\r\n      utc_offset: 3600000,\r\n      name: \"Immobilien Investment Meetup - 2020 EDITION\",\r\n      id: \"267317388\"\r\n    },\r\n    {\r\n      created: 1576311251000,\r\n      duration: 7200000,\r\n      id: \"267182414\",\r\n      name: \"Speaker and topic to be announced\",\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1581616800000,\r\n      local_date: \"2020-02-13\",\r\n      local_time: \"19:00\",\r\n      updated: 1576311251000,\r\n      utc_offset: 3600000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 5,\r\n      group: {\r\n        created: 1462514436000,\r\n        name: \"Microsoft Data Platform Community - PASS Deutschland e.V.\",\r\n        id: 19921609,\r\n        join_mode: \"open\",\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: \"pass-bayern\",\r\n        who: \"Data Monsters\",\r\n        localized_location: \"München, Germany\",\r\n        state: \"\",\r\n        country: \"de\",\r\n        region: \"en_US\",\r\n        timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/pass-bayern/events/267182414/\",\r\n      description: \"<p>Speaker and topic to be announced</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1576311182000,\r\n      duration: 7200000,\r\n      id: \"267182395\",\r\n      name: \"Speaker and topic to be announced\",\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1578592800000,\r\n      local_date: \"2020-01-09\",\r\n      local_time: \"19:00\",\r\n      updated: 1576311182000,\r\n      utc_offset: 3600000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 8,\r\n      group: {\r\n        created: 1462514436000,\r\n        name: \"Microsoft Data Platform Community - PASS Deutschland e.V.\",\r\n        id: 19921609,\r\n        join_mode: \"open\",\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: \"pass-bayern\",\r\n        who: \"Data Monsters\",\r\n        localized_location: \"München, Germany\",\r\n        state: \"\",\r\n        country: \"de\",\r\n        region: \"en_US\",\r\n        timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/pass-bayern/events/267182395/\",\r\n      description: \"<p>Speaker and topic to be announced</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1573318608000,\r\n      duration: 10800000,\r\n      id: \"266343066\",\r\n      name: \"C++ Insights: How stuff works, Lambdas and more!\",\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1580925600000,\r\n      local_date: \"2020-02-05\",\r\n      local_time: \"19:00\",\r\n      rsvp_open_offset: \"PT336H\",\r\n      updated: 1573318705000,\r\n      utc_offset: 3600000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 4,\r\n      group: {\r\n        created: 1381869297000,\r\n        name: \"MUC++\",\r\n        id: 10704512,\r\n        join_mode: \"open\",\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: \"MUCplusplus\",\r\n        who: \"C++ aficionados\",\r\n        localized_location: \"München, Germany\",\r\n        state: \"\",\r\n        country: \"de\",\r\n        region: \"en_US\",\r\n        timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/MUCplusplus/events/266343066/\",\r\n      description:\r\n        \"<p>Today we have the pleasure to welcome Andreas Fertig to our user group. Andreas is an independent trainer and consultant for C++ specializing in embedded systems. It is because of his classes he developed cppinsights.io to make teaching C++ more visual. In the times Andreas is not working with C++ he creates macOS applications or enjoys his leasure time.</p> <p>------------------------------<br/>Abstract: With the help of C++ Insights we’ll dive into how things work in C++, through the eyes of the compiler.</p> <p>For example we’ll look at some apparently simple cases like implicit conversions, and how in-class initializers work. We won’t stop there though! We’ll also walk through how the compiler generates lambdas and explore why you might care.</p> <p>And of course this is C++ so it would be remiss of us not to also take a peek at one of our favourite C++ features: variadic templates!</p> <p>Welcome to the compiler’s world with C++ Insights, and at the very least come away from the talk with a whole new way of looking at the code you write!</p> <p>------------------------------<br/>Schedule:<br/>19:00 -- Welcome with snacks and drinks<br/>19:30 -- Welcome by our host<br/>19:35 -- Lightning talk<br/>19:45 -- Main talk<br/>~21:00 -- Open discussions<br/>22:00 -- Official end</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    },\r\n    {\r\n      created: 1576311289000,\r\n      duration: 7200000,\r\n      id: \"267182416\",\r\n      name: \"Data Engineering Pattern in der Data Factory - Stefan Kirner\",\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1584036000000,\r\n      local_date: \"2020-03-12\",\r\n      local_time: \"19:00\",\r\n      updated: 1576493120000,\r\n      utc_offset: 3600000,\r\n      waitlist_count: 0,\r\n      yes_rsvp_count: 9,\r\n      group: {\r\n        created: 1462514436000,\r\n        name: \"Microsoft Data Platform Community - PASS Deutschland e.V.\",\r\n        id: 19921609,\r\n        join_mode: \"open\",\r\n        lat: 48.13999938964844,\r\n        lon: 11.579999923706055,\r\n        urlname: \"pass-bayern\",\r\n        who: \"Data Monsters\",\r\n        localized_location: \"München, Germany\",\r\n        state: \"\",\r\n        country: \"de\",\r\n        region: \"en_US\",\r\n        timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/pass-bayern/events/267182416/\",\r\n      description: \"<p>Abstract and location will come soon!</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport { mockEvents };\r\n","import axios from \"axios\";\r\nimport { mockEvents } from \"./mock-events\";\r\n\r\nasync function getOrRenewAccessToken(type, key) {\r\n  let url;\r\n  if (type === \"get\") {\r\n    // My Lambda endpoint to get token by code\r\n    url =\r\n      \"https://4b41wz9qqg.execute-api.us-east-1.amazonaws.com/dev/api/token/\" +\r\n      key;\r\n  } else if (type === \"renew\") {\r\n    // My Lambda endpoint to get token by refresh_token\r\n    url =\r\n      \"https://4b41wz9qqg.execute-api.us-east-1.amazonaws.com/dev/api/refresh/\" +\r\n      key;\r\n  }\r\n\r\n  // Use axios to do GET request to the endpoint\r\n  const tokenInfo = await axios.get(url);\r\n  // Save tokens to localStorage together with a timestamp\r\n  localStorage.setItem(\"access_token\", tokenInfo.data.access_token);\r\n  localStorage.setItem(\"refresh_token\", tokenInfo.data.refresh_token);\r\n  localStorage.setItem(\"last_saved_time\", Date.now());\r\n  // Return the access_token\r\n  return tokenInfo.data.access_token;\r\n}\r\n\r\nasync function getAccessToken() {\r\n  const accessToken = localStorage.getItem(\"access_token\");\r\n\r\n  // If no access_token found\r\n  if (!accessToken) {\r\n    // We try to get the authorization code from the url\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n\r\n    if (!code) {\r\n      // If we don't find any code, we need to redirect user to get it\r\n      window.location.href =\r\n        \"https://secure.meetup.com/oauth2/authorize?client_id=q0auq2h5ugp0dce6oibd8bat9t&response_type=code&redirect_uri=https://jessbob.github.io/meetup/\";\r\n      return null;\r\n    }\r\n    return getOrRenewAccessToken(\"get\", code);\r\n  }\r\n\r\n  const lastSavedTime = localStorage.getItem(\"last_saved_time\");\r\n\r\n  // Check if access_token is still valid\r\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\r\n    // The token is valid, return the token and end the function\r\n    return accessToken;\r\n  }\r\n  // If the access_token is expired, try to renew it using refresh_token\r\n  const refreshToken = localStorage.getItem(\"refresh_token\");\r\n  return getOrRenewAccessToken(\"renew\", refreshToken);\r\n}\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    return [\r\n      {\r\n        city: \"Munich\",\r\n        country: \"de\",\r\n        localized_country_name: \"Germany\",\r\n        name_string: \"Munich, Germany\",\r\n        zip: \"meetup3\",\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: \"Munich\",\r\n        country: \"us\",\r\n        localized_country_name: \"USA\",\r\n        state: \"ND\",\r\n        name_string: \"Munich, North Dakota, USA\",\r\n        zip: \"58352\",\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url =\r\n      \"https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=\" +\r\n      query +\r\n      \"&access_token=\" +\r\n      token;\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    return mockEvents.events;\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    let url =\r\n      \"https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public\" +\r\n      \"&access_token=\" +\r\n      token;\r\n\r\n    if (lat && lon) {\r\n      url += \"&lat=\" + lat + \"&lon=\" + lon;\r\n    }\r\n\r\n    if (page) {\r\n      url += \"&page=\" + page;\r\n    }\r\n\r\n    const result = await axios.get(url);\r\n    return result.data.events;\r\n  }\r\n  return [];\r\n}\r\n\r\nexport { getSuggestions, getEvents };\r\n","import React, { Component } from \"react\";\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Alert\">\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = \"blue\";\r\n  }\r\n}\r\n\r\nexport { InfoAlert };\r\n","import React, { Component } from \"react\";\r\nimport { getSuggestions } from \"./api\";\r\nimport { InfoAlert } from \"./Alert\";\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: \"\",\r\n    suggestions: []\r\n  };\r\n\r\n  handleInputChanged = event => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    getSuggestions(value).then(suggestions => {\r\n      this.setState({ suggestions });\r\n\r\n      if (value && suggestions.length === 0) {\r\n        this.setState({\r\n          infoText:\r\n            \"We can not find the city your are looking for please try another city\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          infoText: \"\"\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          placeholder=\"Search City\"\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item => (\r\n            <li\r\n              key={item.name_string}\r\n              onClick={() =>\r\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\r\n              }\r\n            >\r\n              {item.name_string}\r\n              {\"\"}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    number: 32\r\n  };\r\n\r\n  onNumberChange = event => {\r\n    const value = event.target.value;\r\n    this.setState({ number: value });\r\n    this.props.updateEvents(null, null, value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"NumberOfEvents\">\r\n        <span>Display Number of Events </span>\r\n        <input\r\n          type=\"number\"\r\n          className=\"number-of-events\"\r\n          onChange={this.onNumberChange}\r\n          value={this.state.number}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    lat: null,\n    lon: null,\n    page: null\n  };\n\n  componentDidMount() {\n    this.updateEvents();\n  }\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then(events =>\n        this.setState({ events, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then(events =>\n        this.setState({ events, page })\n      );\n    } else {\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(events =>\n        this.setState({ events })\n      );\n    }\n\n    // getEvents(lat, lon).then(events => this.setState({ events }));\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEvents={this.updateEvents} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as atatus from \"atatus-js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\natatus.config(\"2fe387ba367c448383919f8c613a9eb6\").install();\n"],"sourceRoot":""}